#####.tmux.conf daniel
####main setting####
#Change the prefix key to C-a
set -g prefix C-a
unbind C-b
bind C-a send-prefix
set -g mouse on
###Set bind key to reload configuration file
bind r source-file ~/.tmux.conf \; display â€‹"Reloaded!"
####visual####
#status line
set -g visual-activity on
set -g window-status-current-style "underscore"
#Enable RGB colour if running in xterm(1)
set-option -sa terminal-overrides ",xterm*:Tc"
#Pane colours
set -g window-style fg=colour247,bg=colour236
set -g window-active-style fg=white,bg=black
#pane border
set -g pane-border-style bg=colour236,fg=black
set -g pane-active-border-style bg=black,fg=white
#statusbar
set -g status-bg black
set -g message-style fg=black,bg=white
# Status line left side
set -g status-left-length 40
set -g status-left "#[fg=colour245]Session: #S #[fg=colour84]#I #[fg=colour75]#P"
# windows
set -g status-justify centre
set -g window-status-style fg=colour7,bg=colour0
set-window-option -g window-status-current-style fg=colour236,bg=white,bright
# Status line right side
set -g status-right '#[fg=colour245]%d %b #[fg=colour256]%T'
#set -g status-right '#(cd #{pane_current_path}; git rev-parse --abbrev-ref HEAD)'
# Update the status bar every seconds (for the time)
set-option -g -s status-interval 1
###Change the default $TERM to tmux-256color
set -g default-terminal "tmux-256color"
###No bells at all
set -g bell-action none
###Keep windows around after they exit
set -g remain-on-exit on
####copy mode###
##Use vim keybindings in copy mode
#for linux install xclip with:  "sudo apt-get install --assume-yes xclip"#
unbind [
bind v copy-mode
set-option -g mouse on
setw -g mode-keys vi
set-option -s set-clipboard off
bind-key -T copy-mode-vi c send-keys -X begin-selection
bind-key -T copy-mode-vi y send-keys -X rectangle-toggle
bind-key -T copy-mode-vi Enter send-keys -X rectangle-toggle
unbind -T copy-mode-vi Enter
bind-key -T copy-mode-vi y send-keys -X copy-pipe-and-cancel "xclip -sel clip -i"
bind-key -T copy-mode-vi Enter send-keys -X copy-pipe-and-cancel "xclip -sel clip -i"
bind-key -T copy-mode-vi MouseDragEnd1Pane send-keys -X copy-pipe-and-cancel "xclip -sel clip -i"
####workspaceforming####
#split panes using / and -
bind / split-window -h -c "#{pane_current_path}"
bind - split-window -v -c "#{pane_current_path}"
unbind '"'
unbind '%'
#switch panes using Alt-arrow without prefix
#[ALT]+[arrow_keys]
bind -n M-Left select-pane -L
bind -n M-Right select-pane -R
bind -n M-Up select-pane -U
bind -n M-Down select-pane -D
#resize panes using ALT-arrow with first prest prefix C-a
bind -n C-Left resize-pane -L
bind -n C-Right resize-pane -R
bind -n C-Up resize-pane -U
bind -n C-Down resize-pane -D
#swap panes with c-a and arrows
#unbind cause keystrokes collision
unbind Left
unbind Right
unbind Up
unbind Down
#first press [C-a] after that press [arrow_keys] to swap to next pane in arrow view
bind Up swap-pane  -t :.'{up-of}' \; \
  select-pane -t :.'{up-of}'
bind Down swap-pane -t :.'{down-of}' \; \
  select-pane -t :.'{down-of}'
bind Left swap-pane -t :.'{left-of}' \; \
  select-pane -t :.'{left-of}'
bind Right swap-pane -t :.'{right-of}' \; \
  select-pane -t :.'{right-of}'
bind y setw synchronize-panes
#https://stackoverflow.com/questions/16325449/how-to-send-a-command-to-all-panes-in-tmux
# pane movement
bind-key j command-prompt -p "send pane to:"  "join-pane -t '%%'"
bind-key M command-prompt -p "send window to:" "move-window -t '%%'"
#move/new order windows in session
bind -n C-n swap-window -d -t +
bind -n C-p swap-window -d -t -

